When would you want to use a remote repository rather than keeping all your work
local?

You would want to use a remote repository in order to share code with other people. 
A public repository allows you to do open source development and, for proprietary 
code, a private repository gives a team a way to share and review code. Even for 
solo work it allows access to the code from multiple machines.

*********************************************************************************

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Because of merging conflicts. You don't want to have to handle merge conflicts 
when you are in the middle of something else. You want to be in control and do
it only when your work is in a stable state.

*********************************************************************************

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

A branch is a label attached to a commit. Since commits store a reference to 
their parent(s), from the tip of a branch you can access all commits between the
tip and the initial commit. 

A clone is a copy of a git repository, including all its branches. Both remote 
and local repositories can be cloned locally. 

A fork is a GitHub-specific way to clone a GitHub repository into your own 
profile. It all takes place within GitHub.

You would use a fork to get your own copy of someone else's repository onto 
your own profile, especially when you haven't got write access. Then you could 
clone it onto your own computer in order to make your own changes. This would 
not only copy the repository but also set up the remote so you can push your 
changes later.

You would use branches to keep track of commits without having to remember 
commit ids. Creating different branches allows you to work on different versions
of the code in parallel.

*********************************************************************************

What is the benefit of having a copy of the last known state of the remote
stored locally?

You can use it to download the current state of the remote without affecting 
your working directory. Then you can merge it with your working directory when
it's convenient. This can be done offline.

*********************************************************************************

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

You would need to have a system in place to ensure files are not edited 
concurrently, such as file locking.

It would be easier because there would be no need to merge different versions 
of the same file.

But it would be harder for several developers to work on the same area since 
there might be competition for file access.

*********************************************************************************

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
